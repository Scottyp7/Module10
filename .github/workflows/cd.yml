name: CI/CD
on: 
  push:
    branches: [ main ]
jobs: 
  build:
    runs-on: ubuntu-latest 
    strategy :
      matrix :
        node-version : [19.x,20.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }} 
      uses: actions/setup-node@v3
      env:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD : 'true' 
      with:
        node-version : ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Login to Docker Hub 
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }} 
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v4 
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mvc-structure:latest #change mvc structure to resository name thats in docker hub
        platforms: linux/amd64, linux/arm64 # this line ensures that the image is built for both old a new laptops
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}


      #  chmod 400 "ScottParker-ImmersionDay.pem"                            
    #ssh -i "ScottParker-ImmersionDay.pem" ec2-user@ec2-3-25-110-67.ap-southeast-2.compute.amazonaws.com